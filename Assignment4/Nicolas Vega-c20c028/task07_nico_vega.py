# -*- coding: utf-8 -*-
"""Task07_Nico_Vega.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rwPKme798gy_lumLbTUqb3QioCi_-EAY

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)


q1 = prepareQuery('''
  SELECT ?x
  WHERE{
	  ?x rdfs:subClassOf ns:Person		      
  }							                                           
  ''',
  initNs = {"rdfs": RDFS, "ns": ns}
)
for r in g.query(q1):
 print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

for s, p, o in g.triples((None, RDF.type, ns.Person)):
  print(s)

q2 = prepareQuery('''
  SELECT ?x
  WHERE{
	  ?x a ns:Person		      
  }							                                           
  ''',
  initNs = {"rdfs": RDFS, "ns": ns}
)
for r in g.query(q2):
 print(r)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

print()
# 
for subs, p1, o1 in g.triples((None, RDF.type, None)):
    for _ in g.triples((o1, RDFS.subClassOf, ns.Person)):
        for s, p, o in g.triples((subs, None, None)):
            print(f"[RDFLIB] ALL: {subs} {p} {o}")


# Actual Instances of Person
for subs, p1, o1 in g.triples((None, RDF.type, ns.Person)):
    for s, p, o in g.triples((subs, None, None)):
        print(f"[RDFLIB] ALL: {subs} {p} {o}")




q = prepareQuery("""
    SELECT DISTINCT ?person ?prop ?value
    WHERE {
        ?person a ?type.
        ?type rdfs:subClassOf* ns:Person.
        ?person ?prop ?value.
    }
""",
initNs={
    'ns': "http://somewhere#",
    'rdfs': "http://www.w3.org/2000/01/rdf-schema#"
})

for s, p, o in g.triples((None, RDF.type, ns.Person)):
  for s2, p2, o2 in g.triples((s, None, None)):
    print(s2, p2, o2)

q = prepareQuery("""
  SELECT ?x ?pr ?ob
  WHERE{
	  ?x a ns:Person.
    ?x ?pr ?ob.    
    }
""",
initNs={
    'ns': "http://somewhere#",
    'rdfs': "http://www.w3.org/2000/01/rdf-schema#"
})
for r in g.query(q):
 print(r)