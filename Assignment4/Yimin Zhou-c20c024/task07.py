# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zqY3eSooaeh0Y6Q0Cydzb8PTUJSkT6h8

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

for s,p,o in g:
  print(s,p,o)

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

## RDFLib
print('RDFLib')
ns = Namespace('http://somewhere#')

for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)

## SPARQL
print('SPARQL')
# TO DO
from rdflib.plugins.sparql import prepareQuery

q1 = prepareQuery('''
  SELECT ?Subject WHERE { 
    ?Subject rdfs:subClassOf ns:Person. 
    # ?Subject <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://somewhere#Person>.
  }
  ''',
  initNs = { "rdfs": RDFS, "ns":ns}
)

# Visualize the results

for r in g.query(q1):
  print(r.Subject)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

## RDFLib
print('RDFLib')
for s,p,o in g.triples((None, RDF.type, ns.Person)):  #individuos de Person
  print(s)
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):  # incluyendo las subclases
  for s1,p1,o1 in g.triples((None, RDF.type, s)):
    print(s1)

print('SPARQL')
# TO DO
q2 = prepareQuery('''
  SELECT ?Subject WHERE{
    ?Subject rdf:type ns:Person.
    
  }''',
  initNs = {'rdf':RDF, 'ns':ns}
)

q3 = prepareQuery('''
  SELECT ?Subject WHERE{
    ?Subclass rdfs:subClassOf ns:Person.
    ?Subject rdf:type ?Subclass.
    
  }''',
  initNs = {'rdfs':RDFS, 'rdf':RDF, 'ns':ns}
)

# Visualize the results
for r in g.query(q2):
  print(r.Subject)
for r in g.query(q3):
  print(r.Subject)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# RDFLib
print('RDFLib')
for s,p,o in g.triples((None, RDF.type, ns.Person)):
  for s1,p1,o1 in g.triples((s, None, None)):
    print(s1,p1,o1)

for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s1,p1,o2 in g.triples((None, RDF.type, s)):
    for s2,p2,o2 in g.triples((s1, None, None)):
      print(s2,p2,o2)

## SPARQL
print('SPARQL')

# TO DO
q4 = prepareQuery('''
  SELECT ?p ?o WHERE{
    ?Subject rdf:type ns:Person.
    ?Subject ?p ?o.
  }''',
  initNs = {'rdfs':RDFS, 'rdf':RDF, 'ns':ns}
)

q5 = prepareQuery('''
  SELECT ?p ?o WHERE{
    ?Subclass rdfs:subClassOf ns:Person.
    ?Subject rdf:type ?Subclass.
    ?Subject ?p ?o.
  }''',
  initNs = {'rdfs':RDFS, 'rdf':RDF, 'ns':ns}
)

# Visualize the results
for r in g.query(q4):
  print(r.p, r.o)

for r in g.query(q5):
  print(r.p, r.o)