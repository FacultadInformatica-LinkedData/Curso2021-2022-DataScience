# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1siStk31v7cjXfyPQl0QDJWZYpIwBXg5Q

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

# RDFLIB
ns = Namespace("http://somewhere#")
for s,p,o in g.triples((None,RDFS.subClassOf, ns.Person)):
  print("RDFLIB: ",s)

#SPARQL
from rdflib.plugins.sparql import prepareQuery
q1 = prepareQuery('''
  SELECT ?Subject WHERE { 
    ?Subject <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://somewhere#Person>
  }
  '''
)

for r in g.query(q1):
  print("SPARQL: ", r.Subject)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# RDFLIB
for s1,p1,o1 in g.triples((None,RDFS.subClassOf, ns.Person)):
  subclases = s1
  for s2,p2,o2 in g.triples((None,RDF.type, s1)):
    print("RDFLIB: ",s2)
for s3,p3,o3 in g.triples((None,RDF.type, ns.Person)):
  print("RDFLIB: ",s3)

# SPARQL
q2 = prepareQuery('''
  SELECT ?Subject WHERE { 
    ?Subject <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://somewhere#Researcher>
  }
  '''
)
q3 = prepareQuery('''
  SELECT ?Subject WHERE { 
    ?Subject <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://somewhere#Person>
  }
  '''
)

for r in g.query(q2):
  print("SPARQL: ", r.Subject)
for r in g.query(q3):
  print("SPARQL: ", r.Subject)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# RDFLIB
for s1,p1,o1 in g.triples((None,RDFS.subClassOf, ns.Person)):
  subclases = s1
  for s2,p2,o2 in g.triples((None,RDF.type, s1)):
    properties = g.triples((s2,None, None))
    for s3,p3,o3 in properties:
      print("RDFLIB: ",s3,p3,o3)
for s4,p4,o4 in g.triples((None,RDF.type, ns.Person)):
    properties2 = g.triples((s4,None, None))
    for s5,p5,o5 in properties2:
      print("RDFLIB: ",s5,p5,o5)      

# SPARQL
q4 = prepareQuery('''
  SELECT ?p ?o WHERE { 
    <http://somewhere#JaneSmith> ?p ?o
  }
  '''
)
q5 = prepareQuery('''
  SELECT ?p ?o WHERE { 
    <http://somewhere#SaraJones> ?p ?o
  }
  '''
)
q6 = prepareQuery('''
  SELECT ?s ?p ?o WHERE { 
    <http://somewhere#JohnSmith> ?p ?o
  }
  '''
)

for r in g.query(q4):
  print("SPARQL: ", r.p, r.o)
for r in g.query(q5):
  print("SPARQL: ", r.p, r.o)  
for r in g.query(q6):
  print("SPARQL: ", r.p, r.o)