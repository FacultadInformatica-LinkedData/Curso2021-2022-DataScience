# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jSZ0t9oKTzfWtj1JE3lBGqF_-vgQo2_n

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS,XSD
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

# TO DO
# Visualize the results
from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s,p,o)
print('--------')
q2 = prepareQuery('''
 SELECT ?Subject  WHERE { 
    ?Subject <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://somewhere#Person> .
  } 
  ''')

for r in g.query(q2):
  print(r.Subject)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
# Visualize the results
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
#Primero lo buscamos para la subclase de persona, Researcher
for s,p,o in g.triples((None,RDFS.subClassOf,ns.Person)):
 subclase_persona=s
 for s1,p1,o1 in g.triples((None,RDF.type,s)):
  print(s1,p1,o1)
#Ahora los buscamos para aquellas que son de tipo Persona
for s,p,o in g.triples((None,RDF.type,ns.Person)):
  print(s,p,o)
print("------------")
q1 = prepareQuery('''
 SELECT  ?Object  
 WHERE { 
    ?Subject <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://somewhere#Researcher>.
  } 
  ''')
q2 = prepareQuery('''
 SELECT  ?Object  
 WHERE { 
    ?Subject <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://somewhere#Person>.
  } 
  ''')
for r in g.query(q1):
  print(r)
for t in g.query(q2):
  print(t)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# TO DO
# Visualize the results
#Primero lo hacemos para los que son Researches, subclase de Persona
for s,p,o in g.triples((None,RDFS.subClassOf,ns.Person)):
  subclase_persona = s
  for s1,p1,o1 in g.triples((None,RDF.type,s)):
    properties = g.triples((s1,None,None))
    for s2,p2,o2 in properties:
      print(s2,p2,o2)
#Ahora lo hacemos para los que son personas 
for s,p,o in g.triples((None,RDF.type,ns.Person)):
  for s1,p1,o1 in g.triples((s,None,None)):
    print(s1,p1,o1)

print("------------")

q1 = prepareQuery('''
 SELECT  ?Properties ?Object  
 WHERE { 
    ?Subject <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://somewhere#Researcher>.
    ?Subject ?Properties ?Object
  } 
  ''')
q2 = prepareQuery('''
 SELECT ?Properties ?Object  
 WHERE { 
    ?Subject <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://somewhere#Person>.
    ?Subject ?Properties ?Object
  } 
  ''')
  
for r in g.query(q1):
  print(r)

for t in g.query(q2):
  print(t)