# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DEfEOBPS99pGItBOy7UJ6QbIklKyv4Xn

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
from rdflib.plugins.sparql import prepareQuery
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

#Namespaces
ns = Namespace("http://somewhere#")
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

#RDFlib
listaSubclasesPerson = []
print("Resultado RDFlib:")
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
    listaSubclasesPerson += [s]
print(listaSubclasesPerson)

#SPARQL
print("Resultado SPARQL:")
q1 = prepareQuery('''
  SELECT ?Subclass WHERE { 
    ?Subclass RDFS:subClassOf ns:Person. 
  }
  ''',
initNs={"RDFS": RDFS, "ns": ns})

for r in g.query(q1):
    print(r.Subclass)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

#RDFlib
personas =[]
print("Resultado RDFlib:")
for s, p, o in g.triples((None, RDF.type, ns.Person)):
    personas += [s]

for subclass in listaSubclasesPerson:
    for s, p, o in g.triples((None, RDF.type, subclass)):
        personas += [s]
print(personas)

#SPARQL
q2 = prepareQuery('''
  SELECT DISTINCT ?Persons WHERE { 
    ?Persons RDF:type ns:Person.
  }
  ''',
initNs={"ns": ns, "RDF": RDF})

q3 = prepareQuery('''
  SELECT DISTINCT ?Persons WHERE { 
    ?Subclass RDFS:subClassOf ns:Person.
    ?Persons RDF:type ?Subclass
  }
  ''',
initNs={"RDFS": RDFS, "ns": ns, "RDF": RDF})

print("Resultados query SPARQL:")
for r in g.query(q2):
    print(r.Persons)
for r in g.query(q3):
    print(r.Persons)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

#RDFlib
print("Resultado RDFlib:")
for person in personas:
    for s, p, o in g.triples((person, None, None)):
        print(person,p)

#SPARQL
print("Resultados query SPARQL:")
q4 = prepareQuery('''
  SELECT DISTINCT ?Persons ?Property WHERE { 
    ?Persons RDF:type ns:Person.
    ?Persons ?Property ?Object
  }
  ''',
initNs={"RDFS": RDFS, "ns": ns, "RDF": RDF})

q5 = prepareQuery('''
  SELECT DISTINCT ?Persons ?Property WHERE { 
    ?Subclass RDFS:subClassOf ns:Person.
    ?Persons RDF:type ?Subclass.
    ?Persons ?Property ?Object
  }
  ''',
initNs={"RDFS": RDFS, "ns": ns, "RDF": RDF})

for r in g.query(q4):
    print(r.Persons, r.Property)
for r in g.query(q5):
    print(r.Persons, r.Property)