# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PVcyBRq25tA2qJma4-5E534D96YBKqWQ

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

# TO DO WITH RDFLib
ns = Namespace("http://somewhere#")
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)
#with SPARQL
from rdflib.plugins.sparql import prepareQuery
q1 = prepareQuery('''
  SELECT ?Subject WHERE { 
    ?Subject rdfs:subClassOf ns:Person
  }
  ''',
  initNs={"rdfs": RDFS, "ns": ns}
)
# Visualize the results
for r in g.query(q1):
  print(r.Subject)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO WITH RDFLIB
for s,p,o in g.triples((None, RDF.type, ns.Person)):
  print(s)
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  subclass = s
for s,p,o in g.triples((None, RDF.type, subclass)):
  print(s)
#WITH SPARQL
q2 = prepareQuery('''
  SELECT ?Subject WHERE { 
    ?Subject rdf:type ns:Person
  }
  ''',
  initNs={"rdf": RDF, "ns": ns}
)
q3 = prepareQuery('''
  SELECT ?Subject WHERE { 
    ?Subject rdfs:subClassOf ns:Person
  }
  ''',
  initNs={"rdfs": RDFS, "ns": ns}
)

# Visualize the results
for r in g.query(q2):
  print(r.Subject)
for r in g.query(q3):
  q4 = prepareQuery('''
  SELECT ?Subject WHERE { 
    ?Subject rdf:type <r>
  }
  ''',
  initNs={"rdf": RDF}
)
  for r1 in g.query(q4):
    print(r1.Subject)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# TO DO WITH RDFLIB
for s,p,o in g.triples((None, RDF.type, ns.Person)):
  prop = g.triples((s, None, None))
  for s1,p1,o1 in prop:
    print(s1,p1,o1)

for s,p,o in g.triples((None,RDFS.subClassOf, ns.Person)):
    for s1,p1,o1 in g.triples((None,RDF.type,s)):
      prop = g.triples((s1,None,None))
      for s2,p2,o2 in prop:
        print(s2,p2,o2)

#WITH SPARQL
q4 = prepareQuery('''
  SELECT ?Subject ?prop ?val WHERE { 
    ?Subject rdf:type ns:Person .
    ?Subject ?prop ?val
  }
  ''',
  initNs={"rdf": RDF, "ns": ns}
)

#q5 = prepareQuery('''
 # SELECT ?subclass ?subject WHERE { 
  #  ?subclass rdfs:subClassOf ns:Person .
 #   ?subject rdf:type ?subclass
#  }
#  ''',
 # initNs={"rdfs": RDFS, "rdf": RDF, "ns": ns}
#)

q5 = prepareQuery('''
  SELECT ?Subject ?prop ?val WHERE { 
    ?Subject rdf:type <http://somewhere#Researcher> .
    ?Subject ?prop ?val
  }
  ''',
  initNs={"rdf": RDF, "ns": ns}
)

# Visualize the results
for r4 in g.query(q4):
    print(r4.Subject,r4.prop, r4.val)
for r5 in g.query(q5):
  print(r5.Subject, r5.prop, r5.val)