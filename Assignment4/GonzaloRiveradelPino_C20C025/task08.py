# -*- coding: utf-8 -*-
"""Task08.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GXlAjVqS2XDFNkRpqHMkTIDjCh0U4mUR

**Task 08: Completing missing data**
"""

from typing import List
from rdflib import Graph, Namespace, RDF

github_storage = r"https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4" \
                 r"/course_materials "

g1 = Graph()
g2 = Graph()
g1.parse(github_storage + r"/rdf/data01.rdf", format="xml")
g2.parse(github_storage + r"/rdf/data02.rdf", format="xml")
for s, p, o in g1:
    print(s, p, o)

"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas."""

g1.namespace_manager.bind('ns', Namespace("http://data.org#"), override=False)
g1.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)

# Definimos los namespaces:
ns = Namespace("http://data.org#")
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

# Buscamos las personas:
lista_personas: List = []
for s, p, o in g1.triples((None, RDF.type, ns.Person)):
    lista_personas += [s]

print(lista_personas)

for persona in lista_personas:
    familia = VCARD.Family
    given = VCARD.Given
    email = VCARD.EMAIL
    for s, p, o in g2.triples((persona, familia, None)):
        g1.add((s, p, o))
    for s, p, o in g2.triples((persona, given, None)):
        g1.add((s, p, o))
    for s, p, o in g2.triples((persona, email, None)):
        g1.add((s, p, o))

for s, p, o in g1:
    print(s, p, o)
