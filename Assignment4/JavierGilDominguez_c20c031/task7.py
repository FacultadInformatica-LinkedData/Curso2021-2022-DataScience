# -*- coding: utf-8 -*-
"""task7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1y3630qV_IDCSuG4nkJ4FhsSb2cUZRlrC

Task 07: Querying RDF(s)
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo

"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL


"""

from rdflib.plugins.sparql import prepareQuery
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0/")
ns = Namespace("http://somewhere#")

subclass_Person = []
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)
  subclass_Person.append(s)

q1 = prepareQuery('''
      SELECT ?Subclass WHERE { 
        ?Subclass RDFS:subClassOf ns:Person. 
      }
      ''',
              initNs={"RDFS": RDFS, "ns": ns}
              )

for r in g.query(q1):
  print(r.Subclass)

"""TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)


"""

people = []
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  people.append(s)
  print(s)
for subclass in subclass_Person:
  for x, y, z in g.triples((None, RDF.type, subclass)):
    print(x)
    people.append(x)

q2 = prepareQuery('''
     SELECT  ?Subject  WHERE { 
       ?Subject rdf:type ns:Person.
     } 
     ''',
            initNs = {"rdf": RDF, "ns": ns}
            )
q3 = prepareQuery('''
     SELECT  ?Subject WHERE { 
       ?Subject rdf:type ?Person.
       ?Person rdfs:SubClassOf ns:Person.
     } 
     ''',
            initNs = {"rdf": RDF, "ns": ns,"rdfs": RDFS}
            )
for r in g.query(q2):
  print(r)
for r in g.query(q3):
  print(t)

"""TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL


"""

for person in people:
  for s, p, o in g.triples((person, None, None)):
        print(p, o)

q4 = prepareQuery('''
     SELECT  ?Subject ?Properties  WHERE { 
       ?Subject rdf:type ns:Person.
       ?Subject ?Properties ?value
     } 
     ''',
            initNs = { "rdf": RDF, "ns": ns}
            )
q5 = prepareQuery('''
     SELECT ?Subject ?PropertiesWHERE { 
       ?Subject rdf:type ?Person.
       ?Person rdfs:subClassOf ns:Person.
       ?Subject ?Properties ?value
     } 
     ''',
            initNs = { "rdf": RDF, "ns": ns,"rdfs": RDFS}
            )
  
for r in g.query(q4):
  print(r)
for r in g.query(q5):
  print(r)